{"ast":null,"code":"import { CURRENT_AUTH, FAIL_AUTH, LOAD_AUTH, LOGOUT_AUTH, SUCCESS_AUTH } from \"../ActionType/auth.action.type\";\nimport axios from 'axios';\n\n//the action that is triggered once a person wants to record\nexport const register = (newUser, navigate) => async dispatch => {\n  dispatch({\n    type: LOAD_AUTH\n  });\n  try {\n    const result = await axios.post('/api/auth/register', newUser);\n    dispatch({\n      type: SUCCESS_AUTH,\n      payload: result.data\n    });\n    navigate('/Profile');\n  } catch (error) {\n    dispatch({\n      type: FAIL_AUTH,\n      payload: error.response.data.errors\n    });\n  }\n};\n//the action that is triggered once a person wants to Conecte(Login)\nexport const login = user => async dispatch => {\n  dispatch({\n    type: LOAD_AUTH\n  });\n  try {\n    const result = await axios.post(\"/api/auth/login\", user);\n    dispatch({\n      type: SUCCESS_AUTH,\n      payload: result.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FAIL_AUTH,\n      payload: error.response.data.errors\n    });\n  }\n};\n//current action to check the logged in user\nexport const current = () => async dispatch => {\n  dispatch({\n    type: LOAD_AUTH\n  });\n  try {\n    let config = {\n      headers: {\n        authorization: localStorage.getItem(\"token\")\n      }\n    };\n    const result = await axios.get(\"/api/auth/current\", config);\n    dispatch({\n      type: CURRENT_AUTH,\n      payload: result.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FAIL_AUTH,\n      payload: error.response.data.errors\n    });\n  }\n};\n//Log Out \nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT_AUTH\n  });\n};","map":{"version":3,"names":["CURRENT_AUTH","FAIL_AUTH","LOAD_AUTH","LOGOUT_AUTH","SUCCESS_AUTH","axios","register","newUser","navigate","dispatch","type","result","post","payload","data","error","response","errors","login","user","current","config","headers","authorization","localStorage","getItem","get","logout"],"sources":["C:/Users/GAMER/Desktop/TurboFit Project/client/src/JS/action/auth.action.js"],"sourcesContent":["import { CURRENT_AUTH, FAIL_AUTH, LOAD_AUTH, LOGOUT_AUTH, SUCCESS_AUTH } from \"../ActionType/auth.action.type\"\r\nimport axios from 'axios'\r\n\r\n//the action that is triggered once a person wants to record\r\nexport const register = (newUser, navigate) => async (dispatch) => {\r\n    dispatch({type:LOAD_AUTH})\r\n    try {\r\n            const result = await axios.post('/api/auth/register', newUser);\r\n            dispatch({type:SUCCESS_AUTH, payload: result.data });\r\n            navigate('/Profile')\r\n}  catch (error) {\r\n    dispatch({ type: FAIL_AUTH, payload: error.response.data.errors });\r\n}\r\n};\r\n//the action that is triggered once a person wants to Conecte(Login)\r\nexport const login = (user) => async(dispatch) => {\r\n    dispatch({type:LOAD_AUTH});\r\n    try {\r\n        const result = await axios.post(\"/api/auth/login\", user );\r\n        dispatch({type:SUCCESS_AUTH, payload:result.data })\r\n    } catch (error) {\r\n            dispatch({ type: FAIL_AUTH, payload: error.response.data.errors });\r\n    }\r\n};\r\n//current action to check the logged in user\r\nexport const current = () => async (dispatch) => {\r\n        dispatch({type:LOAD_AUTH})\r\n    try {\r\n        let config = {\r\n            headers: {\r\n            authorization: localStorage.getItem(\"token\")\r\n            }\r\n        }\r\n        const result = await axios.get(\"/api/auth/current\", config);\r\n        dispatch({type: CURRENT_AUTH, payload: result.data});\r\n    } catch (error) {\r\n        dispatch({ type: FAIL_AUTH, payload: error.response.data.errors });\r\n    }\r\n};\r\n//Log Out \r\nexport const logout = () => (dispatch) => {\r\n    dispatch({type: LOGOUT_AUTH});\r\n};"],"mappings":"AAAA,SAASA,YAAY,EAAEC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,QAAQ,gCAAgC;AAC9G,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC/DA,QAAQ,CAAC;IAACC,IAAI,EAACR;EAAS,CAAC,CAAC;EAC1B,IAAI;IACI,MAAMS,MAAM,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,oBAAoB,EAAEL,OAAO,CAAC;IAC9DE,QAAQ,CAAC;MAACC,IAAI,EAACN,YAAY;MAAES,OAAO,EAAEF,MAAM,CAACG;IAAK,CAAC,CAAC;IACpDN,QAAQ,CAAC,UAAU,CAAC;EAChC,CAAC,CAAE,OAAOO,KAAK,EAAE;IACbN,QAAQ,CAAC;MAAEC,IAAI,EAAET,SAAS;MAAEY,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG;IAAO,CAAC,CAAC;EACtE;AACA,CAAC;AACD;AACA,OAAO,MAAMC,KAAK,GAAIC,IAAI,IAAK,MAAMV,QAAQ,IAAK;EAC9CA,QAAQ,CAAC;IAACC,IAAI,EAACR;EAAS,CAAC,CAAC;EAC1B,IAAI;IACA,MAAMS,MAAM,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,iBAAiB,EAAEO,IAAK,CAAC;IACzDV,QAAQ,CAAC;MAACC,IAAI,EAACN,YAAY;MAAES,OAAO,EAACF,MAAM,CAACG;IAAK,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACRN,QAAQ,CAAC;MAAEC,IAAI,EAAET,SAAS;MAAEY,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG;IAAO,CAAC,CAAC;EAC1E;AACJ,CAAC;AACD;AACA,OAAO,MAAMG,OAAO,GAAGA,CAAA,KAAM,MAAOX,QAAQ,IAAK;EACzCA,QAAQ,CAAC;IAACC,IAAI,EAACR;EAAS,CAAC,CAAC;EAC9B,IAAI;IACA,IAAImB,MAAM,GAAG;MACTC,OAAO,EAAE;QACTC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC3C;IACJ,CAAC;IACD,MAAMd,MAAM,GAAG,MAAMN,KAAK,CAACqB,GAAG,CAAC,mBAAmB,EAAEL,MAAM,CAAC;IAC3DZ,QAAQ,CAAC;MAACC,IAAI,EAAEV,YAAY;MAAEa,OAAO,EAAEF,MAAM,CAACG;IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZN,QAAQ,CAAC;MAAEC,IAAI,EAAET,SAAS;MAAEY,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG;IAAO,CAAC,CAAC;EACtE;AACJ,CAAC;AACD;AACA,OAAO,MAAMU,MAAM,GAAGA,CAAA,KAAOlB,QAAQ,IAAK;EACtCA,QAAQ,CAAC;IAACC,IAAI,EAAEP;EAAW,CAAC,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}